<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Reno's Blog]]></title>
  <link href="http://renoqiu.github.io/atom.xml" rel="self"/>
  <link href="http://renoqiu.github.io/"/>
  <updated>2013-08-03T21:58:39-07:00</updated>
  <id>http://renoqiu.github.io/</id>
  <author>
    <name><![CDATA[Reno]]></name>
    <email><![CDATA[dechao.qiu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Create a vpn on ec2]]></title>
    <link href="http://renoqiu.github.io/blog/2013/07/31/create-a-vpn-on-ec2/"/>
    <updated>2013-07-31T18:25:00-07:00</updated>
    <id>http://renoqiu.github.io/blog/2013/07/31/create-a-vpn-on-ec2</id>
    <content type="html"><![CDATA[<h2>Server</h2>

<h3>Install Packages</h3>

<ol>
<li>sudo apt-get install openvpn udev lzop libssl-dev openssl</li>
</ol>


<h3>copy existing scripts</h3>

<ol>
<li>cd /etc/openvpn/</li>
<li>sudo mkdir easy-rsa</li>
<li>cp -r /usr/share/doc/openvpn/examples/easy-rsa/2.0/* /etc/openvpn/easy-rsa/</li>
<li>sudo chown -R $USER /etc/openvpn/easy-rsa/</li>
<li>cd /etc/openvpn/easy-rsa/</li>
</ol>


<h3>Change vars file</h3>

<ol>
<li><p>vi /etc/openvpn/easy-rsa/vars and change to following fields, you need to adjust to your location and email address.</p>

<p> <code>
 export KEY_COUNTRY="US"
 export KEY_PROVINCE="CA"
 export KEY_CITY="SanJose"
 export KEY_ORG="renoqiu.com"
 export KEY_EMAIL="me@renoqiu.com"
 export KEY_EMAIL=me@renoqiu.com
 export KEY_CN=renoqiu.com
 export KEY_NAME=Reno
 export KEY_OU=Personal
 export KEY_SIZE=2048
</code></p></li>
</ol>


<h3>Generate Certificate Authority File</h3>

<ol>
<li>source vars</li>
<li>./clean-all</li>
<li>source vars</li>
<li>./build-ca</li>
<li>Do as the prompt</li>
</ol>


<h3>Generate Server Certificate and Key</h3>

<ol>
<li>cd /etc/openvpn/easy-rsa/</li>
<li>source vars</li>
<li>./pkitool &mdash;server server</li>
<li>cd keys</li>
<li>openvpn &mdash;genkey &mdash;secret ta.key</li>
<li>sudo cp server.crt server.key ca.crt dh2048.pem ta.key /etc/openvpn/</li>
<li>./build-key-server server // ignore this line</li>
</ol>


<h3>Generate Client Certificate and key</h3>

<ol>
<li>cd /etc/openvpn/easy-rsa/</li>
<li>source vars</li>
<li><p>Change someuniqueclientcn to a unique name, and change davion to any client name you like.</p>

<p> <code>
 KEY_CN=someuniqueclientcn ./pkitool davion
</code></p></li>
<li>cd ..</li>
</ol>


<h3>Generate Diffie Hellman Parameter</h3>

<ol>
<li>./build-dh # ignore this for now</li>
</ol>


<h3>Configure OpenVPN Server</h3>

<ol>
<li><p>vi /etc/openvpn/server.conf</p>

<p> <code>
 port 443
 proto tcp
 dev tun
 ca /etc/openvpn/easy-rsa/keys/ca.crt
 cert /etc/openvpn/easy-rsa/keys/server.crt
 key /etc/openvpn/easy-rsa/keys/server.key
 dh /etc/openvpn/easy-rsa/keys/dh2048.pem
 server 10.168.1.0 255.255.255.0
 # push "redirect-gateway def1"
 push "redirect-gateway"
 push "dhcp-option DNS 8.8.8.8"
 push "dhcp-option DNS 8.8.4.4"
 client-to-client
 keepalive 10 120
 comp-lzo
 persist-key
 persist-tun
 verb 3
 status openvpn-status.log
</code></p></li>
</ol>


<h3>Setup ip forward</h3>

<ol>
<li>iptables -t nat -A POSTROUTING -s 10.168.0.0/16 -o eth0 -j MASQUERADE</li>
<li>iptables-save > /etc/iptables.rules</li>
<li><p>vi /etc/network/if-up.d/iptables</p>

<p> <code>
 #!/bin/sh
 iptables-restore &lt; /etc/iptables.rules
</code></p></li>
<li>chmod +x /etc/network/if-up.d/iptables</li>
<li><p>vi /etc/sysctl.conf</p>

<p> <code>
 net.ipv4.ip_forward = 1
 net.ipv4.conf.all.send_redirects = 0
 net.ipv4.conf.default.send_redirects = 0
 net.ipv4.conf.all.accept_redirects = 0
 net.ipv4.conf.default.accept_redirects = 0
</code></p></li>
<li>sudo sysctl -p</li>
<li>/etc/init.d/openvpn restart</li>
<li>/etc/init.d/networking restart</li>
</ol>


<h2>Client for Mac</h2>

<ol>
<li>Install <a href="https://sourceforge.net/projects/tunnelblick/files/All%20files/Tunnelblick_3.3.dmg/download">Tunnelblick</a>:</li>
<li>Copy the generated keys from server:

<ul>
<li>ca.crt</li>
<li>client.crt</li>
<li>client.key</li>
<li>ta.key</li>
</ul>
</li>
<li>Create a folder on you Desktop, with name like <code>myvpn</code></li>
<li>Put all above 4 files into the foler</li>
<li><p>Create a text file named: <code>config.ovpn</code>, PS: change <code>107.20.217.201</code> to your server&rsquo;s ip address.</p>

<p> <code>
 client
 dev tun
 proto tcp
 remote 107.20.217.201 443
 resolv-retry infinite
 nobind
 persist-key
 persist-tun
 ca ca.crt
 cert davion.crt
 key davion.key
 ns-cert-type server
 # redirect-gateway
 comp-lzo
 verb 3
</code></p></li>
<li>Change folder <code>myvpn</code> to <code>myvpn.tblk</code></li>
<li>Double click <code>myvpn.tblk</code> to install this vpn</li>
<li>After install it, on the top right corner you can see a house-like icon, click it and selct <code>connect</code></li>
</ol>


<h2>Reference Link</h2>

<ol>
<li><a href="http://leapchasm.com/blog/2011/12/07/shearing-firesheep-with-the-cloud/">http://leapchasm.com/blog/2011/12/07/shearing-firesheep-with-the-cloud/</a></li>
<li><a href="http://www.vpser.net/build/linode-install-openvpn.html">http://www.vpser.net/build/linode-install-openvpn.html</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install vsftpd on Ubuntu]]></title>
    <link href="http://renoqiu.github.io/blog/2013/07/31/install-vsftpd-on-ubuntu/"/>
    <updated>2013-07-31T08:51:00-07:00</updated>
    <id>http://renoqiu.github.io/blog/2013/07/31/install-vsftpd-on-ubuntu</id>
    <content type="html"><![CDATA[<ol>
<li>sudo apt-get install vsftpd</li>
<li>change config: /etc/vsftpd.conf</li>
<li>anonymous_enable=NO</li>
<li>local_enable=YES</li>
<li>write_enable=YES</li>
<li>sudo service vsftpd restart</li>
</ol>


<p>Client:</p>

<pre><code>If you are using Yummy FTP, you may have trouble get file list from ftp server. Try go to Preference, and go to Server Options, unselect ""Default to Passive FTP"
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://renoqiu.github.io/blog/2013/07/28/hello-world/"/>
    <updated>2013-07-28T21:23:00-07:00</updated>
    <id>http://renoqiu.github.io/blog/2013/07/28/hello-world</id>
    <content type="html"><![CDATA[<p>Hello World.</p>

<figure class='code'><figcaption><span>Discover if a number is prime</span><a href='http://blog.renoqiu.com/'>blog</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Fixnum</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prime?</span>
</span><span class='line'>    <span class="p">(</span><span class="s1">&#39;1&#39;</span> <span class="o">*</span> <span class="nb">self</span><span class="p">)</span> <span class="o">!~</span> <span class="sr">/^1?$|^(11+?)\1+$/</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<div><script src='https://gist.github.com/6102189.js'></script>
<noscript><pre><code></code></pre></noscript></div>




<figure class='code'><figcaption><span> (cmain.c)</span> <a href='http://renoqiu.github.io/downloads/code/cmain.c'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[]){</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Add to_fraction for floats (test.rb)</span> <a href='http://renoqiu.github.io/downloads/code/ruby/test.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">Float</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">number_decimal_places</span>
</span><span class='line'>        <span class="nb">self</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="mi">2</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">to_fraction</span>
</span><span class='line'>        <span class="n">higher</span> <span class="o">=</span> <span class="mi">10</span><span class="o">**</span><span class="nb">self</span><span class="o">.</span><span class="n">number_decimal_places</span>
</span><span class='line'>        <span class="n">lower</span> <span class="o">=</span> <span class="nb">self</span><span class="o">*</span><span class="n">higher</span>
</span><span class='line'>        <span class="n">gcden</span> <span class="o">=</span> <span class="n">greatest_common_divisor</span><span class="p">(</span><span class="n">higher</span><span class="p">,</span> <span class="n">lower</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="n">lower</span><span class="o">/</span><span class="n">gcden</span><span class="p">)</span><span class="o">.</span><span class="n">round</span><span class="p">,</span> <span class="p">(</span><span class="n">higher</span><span class="o">/</span><span class="n">gcden</span><span class="p">)</span><span class="o">.</span><span class="n">round</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">private</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">greatest_common_divisor</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>        <span class="k">while</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span> <span class="o">!=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="o">.</span><span class="n">round</span><span class="p">,(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">.</span><span class="n">round</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">b</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">rectangle</span> <span class="nl">setX:</span> <span class="mi">10</span> <span class="nl">y:</span> <span class="mi">10</span> <span class="nl">width:</span> <span class="mi">20</span> <span class="nl">height:</span> <span class="mi">20</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Javascript Array Syntax</span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">arr1</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">arrayLength</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">arr2</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">element0</span><span class="p">,</span> <span class="nx">element1</span><span class="p">,</span> <span class="p">...,</span> <span class="nx">elementN</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>More &hellip;</p>
]]></content>
  </entry>
  
</feed>
